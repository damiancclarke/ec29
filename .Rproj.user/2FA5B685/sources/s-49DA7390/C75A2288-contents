# =============================================================================

# CONSTRUÇÃO DA BASE FINAL DO ARTIGO DE CAPACIDADES ESTATAIS E COVID

# Autor: Michel Szklo
# Maio/2021

# --------------------------------------


# Variável de resultado

    # Número de mortes "real" estimado -- IEPS + Marcia Castro



# Variáveis explicativas

    # [ok] Conselho de Saúde: n reunioes -- MUNIC
    # [ok] Conselho de Saúde: Carater (dummy se todos?) --  DATA FINAL GRIN
    # [ok] Consórcio de Saúde --  DATA FINAL GRIN - capacidades
    # [ok] Plano de Saúde: ultima atualização -- MUNIC
    # [retirada: nao ha variacao, grande maioria a secretaria] Fundo de Saúde: instituição a qual está associado -- MUNIC
    # % gasto próprio - TABNET SIOPS
    # [ok] % Servidores estatutarios - DATA FINAL GRIN
    # [ok] UBS per capita - DATA FINAL GRIN
    # [ok] Cobertura PSF - DATA FINAL GRIN
    # Decretos de fechamento / flexibilização - BASE DE DADOS ARTIGO NATURE

# Controles

    # [ok] população --DATA FINAL GRIN
    # [ok] receita per capita
    # [ok] pib per capita
    # [ok] Dias desde o 100o caso
    # [ok] UTIs por 100mil num raio de 100km
    
    # VOTORANTIM    

    # [ok] pop2019
    # [ok] % de idosos
    # [ok] % cad unico
    # [ok] internacoes de condicoes sensiveis a Covid
    # [ok] Densidade Demográfica
    # [ok] taxa de urbanizacao
    # [ok] leitos_100k na microrregiao
    # [ok] ventiladores 100k na microregiao
    # [ok] % da populacao dependente do SUS
    # [ok] Necessidade de referenciamento



# =============================================================================



# 0. Setup
# =============================================================================


rm(list=ls())

# packages
packages<-c('readr',
            'tidyverse',
            'dplyr',
            'RCurl',
            'tidyr',
            'scales',
            'RColorBrewer',
            'ggplot2',
            'xlsx',
            'stringdist',
            'textclean',
            'readstata13',
            'stargazer')
to_install<-packages[!(packages %in% installed.packages()[,"Package"])]
if(length(to_install)>0) install.packages(to_install)

lapply(packages,require,character.only=TRUE)



# 1. Variáveis de Saúde - Livro Grin
# =============================================================================

df1 <- read.csv("data_final.csv", sep = ";") 

df1 <- df1 %>% 
  select(c("cod_mun6","cod_mun7","control.pop2018","control.pib","control.idh2010","control.receitas2018",grep("^X1.201",names(df1)),"X1.2018.MSAU114","X11B.2015.A156","X11B.2015.A157.158")) %>% 
  rename(capacidades_conselho_consultivo = X1.2018.MSAU111,
         capacidades_conselho_normativo = X1.2018.MSAU113,
         capacidades_conselho_fiscalizador = 28,
         capacidades_servidores_estatutarios = X1.2014.A257,
         capacidades_ubs_pc = X1.2018.UAB,
         capacidades_cobertura_psf = X1.2018.PSF,
         controles_pop2018 = control.pop2018,
         controles_pib = control.pib,
         controles_idh2010 = control.idh2010,
         controles_receitas2018 = control.receitas2018,
         capacidades_consorcio_horizontal = 29,
         capacidades_consorcio_vertical = 30) 



# 2. Variáveis de Saúde - MUNIC 2018
# =============================================================================

df2 <- read.csv("novas_munic.csv",sep = ";", encoding = "Latin1") %>% 
  rename(cod_mun7=1) %>% 
  rename(capacidades_reunioes_conselho = MSAU12,
         capacidades_plano_saude_data = MSAU201) %>% 
  mutate(capacidades_reunioes_conselho = as.numeric(capacidades_reunioes_conselho),
         capacidades_plano_saude_data = as.numeric(capacidades_plano_saude_data)) %>% 
  mutate(capacidades_plano_saude_data = 2018 - capacidades_plano_saude_data)


# 3. Variáveis NPI - Artigo Nature
# =============================================================================

df3 <- read.csv("npi_dist_covid_daily_panel_compl.csv", sep = ";")
df3_npi <- df3 %>% 
  rename(cod_mun6 = 1) %>% 
  filter(data == "2020-07-31") %>% 
  select(cod_mun6, svs_ess_date, flexib_date)


colnames(df3_npi)[2:3] <- sapply(colnames(df3_npi)[2:3], function(x) paste0("capacidades_",x))

df3_covid <- df3 %>% 
  rename(cod_mun6 = 1) %>%
  group_by(cod_mun6) %>% 
  mutate(totalCases = ifelse(is.na(totalCases),0,totalCases)) %>% 
  mutate(num = ifelse(totalCases >= 100, 1, 0)) %>% 
  mutate(controles_diasdesde100caso = cumsum(num)) %>% 
  ungroup() %>% 
  select(-num) %>% 
  filter(data=="2020-10-31") %>% 
  select(cod_mun6, controles_diasdesde100caso, deaths, totalCases, totalCases_per_100k_inhabitants)


# 4. Variáveis % recurso proprio ems saude - SIOPS/DATASUS
# =============================================================================

df4 <- read.csv("siops_2020.csv",sep = ";") %>% 
  rename(cod_mun6 = 1,
         capacidades_pct_recproprio = 2) %>%
  select(-Total) %>% 
  mutate(cod_mun6 = as.numeric(substr(cod_mun6,1,6)))

df4$capacidades_pct_recproprio <- sapply(df4$capacidades_pct_recproprio, function(x) as.numeric(gsub(",",".",x))/100, simplify = "array")


# 5. Distancia dos municípios para UTI
# =============================================================================

df5 <- read.csv("mun_features.csv", sep = ";") %>% 
  select(codmun,itu_sus_per100k_100km) %>% 
  rename(controles_itu_sus_per100k_100km = itu_sus_per100k_100km) %>% 
  rename(cod_mun6 = 1)



# 6. Indicadores do Índice de Vulnerabilidade Votorantim
# =============================================================================

df6 <- read.csv("vulnerabilidade_votorantim.csv",sep = ";") %>% 
  rename(pct_pop_idosos = pct_.pop_idosos) %>% 
  mutate(pct_pop_idosos = as.numeric(pct_pop_idosos),
         urbanizacao = as.numeric(urbanizacao),
         ventiladores_100k_microrregiao = as.numeric(ventiladores_100k_microrregiao),
         pct_pop_sistema_publico = as.numeric(pct_pop_sistema_publico),
         referenciamento_internacao = as.numeric(referenciamento_internacao))

colnames(df6)[2:11] <- sapply(colnames(df6)[2:11], function(x) paste0("controles_",x))


# 7. Mortalidade Parametrizada
# =============================================================================

load("standardized_mortality.RData")

df7 <- standardized_mortality %>% 
  rename(cod_mun6 = codmun,
         controles_pop2020 = pop2020,
         deaths_per_100k_inhabitants_adj = mr_adj)


rm(standardized_mortality)




# 8. Base de dados Final
# =============================================================================

df <- df1 %>% 
  left_join(df2, by = "cod_mun7") %>% 
  left_join(df3_npi, by = "cod_mun6") %>% 
  select(-capacidades_flexib_date) %>% 
  left_join(df3_covid, by = "cod_mun6") %>% 
  left_join(df4, by = "cod_mun6") %>% 
  left_join(df5, by = "cod_mun6") %>% 
  left_join(df6, by = "cod_mun6") %>% 
  left_join(df7, by = "cod_mun6") %>% 
  mutate(deaths_per_100k_inhabitants = deaths/controles_pop2020 * 100000,
         capacidades_ubs_pc = capacidades_ubs_pc/controles_pop2018 * 1000,
         controles_receitas2018 = controles_receitas2018/controles_pop2018) %>% 
  select(-c("capacidades_svs_ess_date","controles_idh2010","controles_pop2018","controles_pop2019"))



controles <- grep("^controles",colnames(df), value = T)
capacidades <- grep("^capacidades",colnames(df),value = T)

df <- cbind.data.frame(df["cod_mun6"],df["deaths"],df["totalCases"],df["totalCases_per_100k_inhabitants"],df["deaths_per_100k_inhabitants"],df["deaths_per_100k_inhabitants_adj"],df[capacidades],df[controles])



# amostra reduzida (municipios com população menor que 50k)
df_sub1 <- df %>% filter(controles_pop2020<50000)
# amostra reduzida (municipios com população menor que 50k)
df_sub2 <- df %>% filter(controles_pop2020<30000)






# statísticas descritivas de ambas amostras
stargazer(df_sub1 %>% select(-capacidades), type = "text", title = "Estatísticas Descritivas", digits = 2, out = "stats_reduced_sample1.csv")
stargazer(df_sub2 %>% select(-capacidades), type = "text", title = "Estatísticas Descritivas", digits = 2, out = "stats_reduced_sample2.csv")
stargazer(df %>% select(-capacidades), type = "text", title = "Estatísticas Descritivas", digits = 2, out = "stats_full_sample.csv")

# teste t de diferenças de média


variaveis <- c(controles,"totalCases_per_100k_inhabitants","deaths_per_100k_inhabitants","deaths_per_100k_inhabitants_adj")

ttest_table <- cbind("",0,0) %>% as.data.frame()
for (i in seq.int(1,length(variaveis))){
  ttest <- t.test(df_sub1[variaveis[i]], df[variaveis[i]])
  table <- cbind(variaveis[i], ttest$statistic,ttest$p.value)
  ttest_table <- rbind(ttest_table,table)
}

ttest_table <- ttest_table %>% 
  rename("Variável" = 1, "Estatística-t" = 2, "p-valor" = 3) %>% 
  filter(Variável!="")

write.table(ttest_table, "t_test.csv", sep = ",")



# 8. Salvando
# =============================================================================

save(df,df_sub1,df_sub2, controles, capacidades, file = "datafinal.RData")




teste <- df %>% 
  mutate(adj = deaths_per_100k_inhabitants - deaths_per_100k_inhabitants_adj) %>% 
  select(cod_mun6, adj, everything())
