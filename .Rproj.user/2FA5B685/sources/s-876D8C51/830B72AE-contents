#######################################################################################################
# Author: Michel Szklo
# April 2021
# 
# This scripts consolidates the final dataset
#
#
#######################################################################################################

# 0. Set-up
# =================================================================

rm(list=ls())

# packages
packages<-c('readr',
            'tidyverse',
            'dplyr',
            'RCurl',
            'tidyr',
            'scales',
            'RColorBrewer',
            'ggplot2',
            'xlsx',
            'stringdist',
            'textclean',
            'readstata13')
to_install<-packages[!(packages %in% installed.packages()[,"Package"])]
if(length(to_install)>0) install.packages(to_install)

lapply(packages,require,character.only=TRUE)

raw <- "C:/Users/Michel/Google Drive/DOUTORADO FGV/Artigos/EC 29-2000/data/"



# 1. List of municipalities
# =================================================================
mun_list <- read.csv(paste0(raw,"lista_mun/lista_mun_2000.csv"), encoding = "UTF-8") %>% 
  rowwise() %>% 
  mutate(ano = list(seq.int(1998,2010))) %>% 
  ungroup() %>% 
  unnest(ano) %>% 
  rename("cod_mun" = 1)
  


# 2. Expenditure deflator
# =================================================================
deflator <- read.csv(paste0(raw,"inflacao/igp_di.csv"), encoding = "Latin1", sep = ";") %>% 
  rename(ano = 1,
         deflator_saude = 2)


# 3. Importing FINBRA data
# =================================================================

finbra <- read.csv(paste0(raw,"Finbra/FINBRA.csv"), encoding = "UTF-8") %>% 
  select(ano,cod_mun,nome_mun,cod_uf,uf,pop,pop2000,everything()) %>% 
  select(-c(dep_gambiental,dep_orgagraria))

names(finbra) <- gsub("desp","finbra_desp",names(finbra))

finbra_receita <- read.csv(paste0(raw,"Finbra/FINBRA_receita.csv"), encoding = "UTF-8") %>% 
  rename(finbra_reccorr=reccorr) %>% 
  filter(ano<=2010)

finbra <- finbra %>% left_join(finbra_receita, by = c("ano","cod_mun"))
  
rm(finbra_receita)


finbra[8:33] <- lapply(finbra[8:33], as.numeric)


# 4. Importing SIOPS data
# =================================================================

siops <- readRDS(paste0(raw,"SIOPS/SIOPS.rds")) %>% 
  select(ano, cod_mun,nome_mun,UF,cod_uf,estado,pop,everything()) %>% 
  mutate(pct_recproprios_ec29 = pct_recproprios_ec29/100,
         cod_mun  = as.numeric(cod_mun)) %>% 
  filter(!is.na(cod_mun))

names(siops)[8:33] <- paste("siops",names(siops)[8:33], sep = "_")


# 5. Merging Datasus Data
# =================================================================

# infra
infra <- data.frame(read.dta13(paste0(raw,"Infra/infra_psf.dta")))

# sinasc (birth - access to health)
sinasc <- read.csv(paste0(raw,"SINASC/SINASC_final.csv"), encoding = "UTF-8")

# sim
sim <- data.frame(read.dta13(paste0(raw,"SIM/sim_collapse.dta")))

pop_40 <- read.csv(paste0(raw,"SIM/pop40.csv")) %>% rename(pop40=pop)

sim_adt <- data.frame(read.dta13(paste0(raw,"SIM/sim_collapse_adult.dta")))

# sia
sia <- read.csv(paste0(raw,"SIA/SIA_final.csv"), encoding = "UTF-8")


ams <- data.frame(read.dta13(paste0(raw,"AMS/ams.dta"))) 

# ADD VARIABLE AFTER MERGES
# %>% 



# 6. Infrastructure data (PSF Romero's files)
# =================================================================

leitos <- data.frame(read.dta13(paste0(raw,"Infra/Leitos.dta"))) %>% filter(ano>=1998)


# 7. Atlas 2013 data (Baseline controls)
# ==============================================================

atlas <- read.csv(paste0(raw,"Atlas2013/atlas_data.csv"), encoding = "UTF-8", sep = ";") %>%
  rename(ano=1) %>%
  filter(ano!=1991) %>% 
  rename(cod_mun = Codmun6)
colnames(atlas) <- tolower(colnames(atlas))
atlas <- atlas %>% 
  select(cod_mun,ano,espvida,mort1,mort5,e_anosestudo,t_analf18m,gini,pind,pmpob,rdpc) %>% 
  mutate(pind = pind/100,
         pmpob = pmpob/100)


# 8. Censo 2000-2010
# ==============================================================
censo <- data.frame(read.dta13(paste0(raw,"censo/censo.dta"))) %>% 
  mutate(drop = cod_mun) %>% 
  mutate(drop = substr(as.character(drop),3,6)) %>% 
  filter(drop!="0000") %>% 
  select(-drop) %>% 
  filter(!is.na(cod_mun))


# 9. Electoral Data
# ==============================================================
elect <- read.csv(paste0(raw,"TSE/run_reelection.csv"), encoding = "UTF-8")




# 10. Merging all
# ==============================================================

df <- mun_list %>% 
  # mergin deflator
  left_join(deflator, by = "ano") %>% 
  # merging FINBRA data
  left_join(finbra %>% select(-c(uf,nome_mun,pop2000,pop,cod_uf))) %>% 
  # merging SIOPS data
  left_join(siops %>% select(-pop), by = c("ano","cod_mun")) %>%
  # datasus - infra
  left_join(infra, by = c("ano","cod_mun")) %>% 
  # datasus - sinasc
  left_join(sinasc, by = c("ano","cod_mun")) %>% 
  # datasus - sim
  left_join(sim, by = c("ano","cod_mun")) %>% 
  left_join(sim_adt, by = c("ano","cod_mun")) %>% 
  left_join(pop_40, by = c("ano","cod_mun")) %>%
  # datasus - sia
  left_join(sia, by = c("ano","cod_mun")) %>%
  # leitos
  left_join(leitos, by = c("ano","cod_mun")) %>%
  # atlas
  left_join(atlas, by = c("ano","cod_mun")) %>%
  # censo
  left_join(censo, by = c("ano","cod_mun")) %>%
  # electoral
  left_join(elect, by = c("ano","cod_mun")) %>%
  group_by(cod_mun) %>% 
  mutate(reelect_sample = max(reelect,na.rm = T),
         reelect_sample = ifelse(is.infinite(reelect_sample),0,1)) %>% 
  # ams
  left_join(ams, by = c("ano","cod_mun")) %>%
  mutate(hospital_nmun = ifelse(!is.na(hospital_est) & !is.na(hospital_fed),0,NA)) %>%
  mutate(hospital_nmun = hospital_est + hospital_fed) %>% 
  mutate(hr_all = hr_superior + hr_technician + hr_elementary + hr_admin)

  # creating dummies for the presence of hospitals

      dummy_vars <- c("hospital_all",
                      "hospital_all_esp",
                      "hospital_est",
                      "hospital_est_esp",
                      "hospital_fed",
                      "hospital_fed_esp",
                      "hospital_mun",
                      "hospital_mun_esp",
                      "hospital_pvt",
                      "hospital_pvt_esp",
                      "hospital_nmun",
                      "hospital_pub",
                      "hospital_pub_esp")
      
      for (v in dummy_vars){
        newvar <-  paste0("d_",v)
        df <- df %>% 
          mutate(!!newvar :=  ifelse(!!sym(v)>0,1,0))
      }
      
  
      
# 11. Deflating variables
# ==============================================================

exclude_vars <- grep("siops_pct",names(df), invert = T,value = T)
siops_vars <- grep("siops",names(df), value = T)
siops_vars <- siops_vars[siops_vars %in% exclude_vars]

finbra_vars <- grep("finbra",names(df),value = T)
finbra_vars_new <- sapply(finbra_vars, function(x) paste0(x,"_pcapita"), simplify = "array")

df[finbra_vars_new] <- df[finbra_vars]

df <- df %>% 
  # mutate_at(siops_vars, `/`, quote(deflator_saude)) %>% 
  mutate_at(finbra_vars_new, `/`, quote(pop)) %>% 
  mutate_at(finbra_vars_new, `/`, quote(deflator_saude))
  


for(v in siops_vars){
  df <- df %>% 
    mutate(!!v := !!sym(v)/deflator_saude)
}




for(v in finbra_vars){
  pcvar <- paste0(v,"_pcapita")
  df <- df %>% 
    mutate(!!pcvar := !!sym(v)/pop/deflator_saude) %>% 
    select(-c(v))
}
  
  

  



