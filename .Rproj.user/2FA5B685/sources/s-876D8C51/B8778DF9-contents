
#################################################################################################
# Author: Michel Szklo
# March 2021

# This script runs Callaway & Santanna (2020) estimator for Bhalotra, Rocha, Soares (PSF article) 


#################################################################################################


# 0. Set-up
# =================================================================

rm(list=ls()) 

# packages
packages<-c('tidyverse','dplyr','tidyr',
            'scales','ggplot2','ggrepel','did',
            'installr','foreign', 'readstata13',
            'Rfast','dummies','gmodels','plm',
            'random')

to_install<-packages[!(packages %in% installed.packages()[,"Package"])]
if(length(to_install)>0) install.packages(to_install)

lapply(packages,require,character.only=TRUE)



setwd("C:/Users/Michel/Google Drive/DOUTORADO FGV/IEPS/PSF")
output <- "C:/Users/Michel/Google Drive/DOUTORADO FGV/IEPS/PSF/callaway_santanna/"

# setting seed to be used on CS bootstrap
#random <- randomNumbers(n=1, min=100000, max=99999999, col = 1) / result: 14620281
set.seed(14620281)


# 1. Data input
# =================================================================

psf <- data.frame(read.dta13('base_final_AMC91.dta'))

df <- psf %>%
  mutate(effyear = ifelse(psf==0,2011,ano)) %>%
  select(effyear, everything()) %>% 
  dplyr::arrange(codamc,effyear,ano) %>%
  dplyr::group_by(codamc) %>% 
  mutate(effyear = min(effyear)) %>% 
  mutate(effyear = ifelse(effyear==2011,0,effyear)) %>%
  filter(ano<=2004) %>% 
  mutate(effyear = ifelse(effyear>2004,0,effyear)) %>% 
  filter(psf_AMCmiss!=1)

df2 <- df %>% filter(ano>=1998)

# 2. Specifications
# =================================================================

# weights
weight_b <- "peso_b"
weight_c <- "peso_m" 
weight_m <- "peso_m"
weight_t <- "peso_tot"

# covariates b
cov_b <- c("hospital","pbf_pc","psf_int")
cov_b <- as.formula(paste("~ ",paste(cov_b,collapse = "+")))

# covariates c
cov_c <- c("pbf_pc","psf_int")
cov_c <- as.formula(paste("~ ",paste(cov_c,collapse = "+")))

# covariates m
cov_m <- c("hospital","pbf_pc")
cov_m <- as.formula(paste("~ ",paste(cov_m,collapse = "+")))

# covariates t
cov_t <- c("pbf_pc","psf_int")
cov_t <- as.formula(paste("~ ",paste(cov_t,collapse = "+")))



# 3. Outcomes list
# =================================================================

# Reestructuring
psf <- c("psf_popcover","psf_teams_pc") # spec_c ano>=1998
infra <- c("hospital","leitos_pc") # spec_c
spending <- c("l_desp_corrente_net_pc","l_desp_saude_sb_pc") # spec_t
amb <- c("sia_tot_pc","sia_domicsup_pc","sia_educ_pc","ncnes_psf_pc", # spec_t
         "ncnes_pediat_pc","ncnes_ginobs_pc")

# Access
access <- c("birth_prenatal_7plus")  #spec_c
hosp_m <- c("r_mat_hospit_nondel_pc","r_mat_hospit_del_pc") # spec_m ano>=1998
hosp_i <- c("r_baby_hospt_pc") # spec_b ano>=1998

# Female Mortality
fmr <- c("r_mat_death_all_pc") # spec_m

# Infant Mortality
imr <- c("r_baby_death_pc") # spec_b
imr_time <- c("r_baby_death_fetal_pc","r_baby_neonatal_pc","r_baby_death_24hs_pc",
              "r_baby_death_27days_pc","r_baby_death_year_pc")
imr_cause <- c("r_baby_death_infectious_pc","r_baby_death_respiratory_pc",
               "r_baby_death_perinatal_pc","r_baby_death_congenital_pc",
               "r_baby_death_external_pc","r_baby_death_nutrition_pc") # spec_b

# Fertility
fertility <- c("ln_births") #spec_b


# 4. Regression and output function
# =================================================================

cs <- function(df,var,weight){
  
  # Estimating the effect with NOT YET TREATED CONTROLS
  atts <- att_gt(yname = var, # LHS variable
                 tname = "ano", # time variable
                 idname = "codamc", # id variable
                 gname = "effyear", # first treatment period variable
                 data = df, # data
                 weightsname = weight,
                 xformla = NULL, # no covariates
                 est_method = "reg", # "dr" is doubly robust. "ipw" is inverse probability weighting. "reg" is regression
                 control_group = "notyettreated", # set the comparison group which is either "nevertreated" or "notyettreated"
                 bstrap = TRUE, # if TRUE compute bootstrapped SE
                 biters = 1000, # number of bootstrap iterations
                 print_details = FALSE, # if TRUE, print detailed results
                 clustervars = "codamc", # cluster level
                 panel = TRUE # whether the data is panel or repeated cross-sectional
  )


  # Event-study
  agg_effects_es <- aggte(atts, type = "dynamic")

  # output
  out <-  cbind(agg_effects_es$att.egt, agg_effects_es$se.egt) %>%
    as.data.frame() %>%
    mutate(lb = V1 - 1.96*V2,
           ub =  V1 + 1.96*V2) %>%
    cbind(agg_effects_es$egt)
  colnames(out) <- c("b","se","lb","ub","t")

  out_att <- cbind(agg_effects_es$overall.att,agg_effects_es$overall.se) %>%
    as.data.frame() %>%
    mutate(lb = V1 - 1.96*V2,
           ub =  V1 + 1.96*V2)
  colnames(out_att) <- c("b","se","lb","ub")

  saveRDS(out,paste0("callaway_santanna/output/",var,"_ny.rds"))
  saveRDS(out_att,paste0("callaway_santanna/output/",var,"_ny_att.rds"))


  
  
  # # Estimating the effect with NEVER TREATED CONTROLS
  # atts <- att_gt(yname = var, # LHS variable
  #                tname = "ano", # time variable
  #                idname = "codamc", # id variable
  #                gname = "effyear", # first treatment period variable
  #                data = df, # data
  #                weightsname = weight,
  #                xformla = NULL, # no covariates
  #                est_method = "reg", # "dr" is doubly robust. "ipw" is inverse probability weighting. "reg" is regression
  #                control_group = "nevertreated", # set the comparison group which is either "nevertreated" or "notyettreated" 
  #                bstrap = TRUE, # if TRUE compute bootstrapped SE
  #                biters = 1000, # number of bootstrap iterations
  #                print_details = FALSE, # if TRUE, print detailed results
  #                clustervars = "codamc", # cluster level
  #                panel = TRUE # whether the data is panel or repeated cross-sectional
  # ) 
  # 
  # 
  # # Event-study
  # agg_effects_es <- aggte(atts, type = "dynamic")
  # 
  # # output 
  # out <-  cbind(agg_effects_es$att.egt, agg_effects_es$se.egt) %>%
  #   as.data.frame() %>% 
  #   mutate(lb = V1 - 1.96*V2,
  #          ub =  V1 + 1.96*V2) %>% 
  #   cbind(agg_effects_es$egt)
  # colnames(out) <- c("b","se","lb","ub","t")
  # 
  # out_att <- cbind(agg_effects_es$overall.att,agg_effects_es$overall.se) %>% 
  #   as.data.frame() %>% 
  #   mutate(lb = V1 - 1.96*V2,
  #          ub =  V1 + 1.96*V2)
  # colnames(out_att) <- c("b","se","lb","ub")
  # 
  # saveRDS(out,paste0("callaway_santanna/output/",var,"_nt.rds"))
  # saveRDS(out_att,paste0("callaway_santanna/output/",var,"_nt_att.rds"))
  
  
}


# 5. Reestructuring
# =================================================================

for (i in psf){
  cs(df2,i,weight_c)
  print(paste0("Estimate of CS Event Study Regression for --",i,"-- saved"))
}

for (i in infra){
  cs(df,i,weight_c)
  print(paste0("Estimate of CS Event Study Regression for --",i,"-- saved"))
}

for (i in spending){
  cs(df,i,weight_t)
  print(paste0("Estimate of CS Event Study Regression for --",i,"-- saved"))
}

for (i in amb){
  cs(df,i,weight_t)
  print(paste0("Estimate of CS Event Study Regression for --",i,"-- saved"))
}


# 6. Access to healthcare
# =================================================================

for (i in access){
  cs(df,i,weight_c)
  print(paste0("Estimate of CS Event Study Regression for --",i,"-- saved"))
}

for (i in hosp_m){
  cs(df2,i,weight_m)
  print(paste0("Estimate of CS Event Study Regression for --",i,"-- saved"))
}

for (i in hosp_i){
  cs(df2,i,weight_b)
  print(paste0("Estimate of CS Event Study Regression for --",i,"-- saved"))
}


# 7. Female mortality
# =================================================================

for (i in fmr){
  cs(df,i,weight_m)
  print(paste0("Estimate of CS Event Study Regression for --",i,"-- saved"))
}


# 8. Infant Mortality
# =================================================================

for (i in imr){
  cs(df,i,weight_b)
  print(paste0("Estimate of CS Event Study Regression for --",i,"-- saved"))
}

for (i in imr_time){
  cs(df,i,weight_b)
  print(paste0("Estimate of CS Event Study Regression for --",i,"-- saved"))
}

for (i in imr_cause){
  cs(df,i,weight_b)
  print(paste0("Estimate of CS Event Study Regression for --",i,"-- saved"))
}



# 9. Fertility
# =================================================================

for (i in fertility){
  cs(df,i,weight_b)
  print(paste0("Estimate of CS Event Study Regression for --",i,"-- saved"))
}


